************PowerShell Argument passing command line*************

Posted on 2013/08/23 by rcmtech(https://rcmtech.wordpress.com/2013/08/23/powershell-and-double-quotes-on-the-command-line/#comment-5839)

Note : Powershell escape sequence character is tick (`)

I’ve had issues passing in parameters to a PowerShell script that need double quotes around them, due to containing a space. Consider the following very basic PowerShell script:

param([string]$Something = "")
Write-Host "I received $Something"

This just writes out what the script received as the parameter. I’ve saved the script with a filename of C:\Scripts\ParamCheck.ps1.

From a cmd prompt, execute the script as follows:

powershell.exe C:\Scripts\ParamCheck.ps1 -Something "one two"

Output:

 one

Here’s some ways to make this work properly:

Method 1: Use single quotes
powershell.exe C:\Scripts\ParamCheck.ps1 -Something 'one two'

Method 2: Use a backslash delimiter (even though PowerShell internally uses the left-single-quote `):
powershell.exe C:\Scripts\ParamCheck.ps1 -Something \"one two\"

Method 3:Use three double quotes:
powershell.exe C:\Scripts\ParamCheck.ps1 -Something """one two"""

All three of the above give the expected output of:
Output:

 one two

Method 4: Use -File argument:
powershell -File C:\Scripts\ParamCheck.ps1 -Something "one two"